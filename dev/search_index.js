var documenterSearchIndex = {"docs":
[{"location":"","page":"Overview","title":"Overview","text":"CurrentModule = Backboner\nDocTestSetup = quote\n    using Backboner\nend","category":"page"},{"location":"#Backboner","page":"Overview","title":"Backboner","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"(Image: Latest Release) (Image: MIT license) (Image: Documentation) (Image: Build Status) (Image: Coverage)","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"This package offers types and functions for working with molecular backbones, defined here as continuous chains of bonded atoms.[1]","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Backbones can be represented with different types:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Backbone: a type containing a 3xN matrix of coordinates\nChainedBonds: a type that holds vectors of bond lengths, bond angles, and torsion angles\nFrames: a collection of rotations and translations (e.g. for representing orientations and locations of protein residues)","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"Most functions are implemented especially with differentiability in mind, and can be used in combination with automatic differentiation packages like Zygote.jl.","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"View the source code on GitHub (licensed under MIT).","category":"page"},{"location":"#Installation","page":"Overview","title":"Installation","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Backboner is registered, and can be installed in the Julia REPL. Press ] to enter pkg mode, and then run:","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"add Backboner","category":"page"},{"location":"#Example-usage","page":"Overview","title":"Example usage","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"julia> using Backboner\n\njulia> backbone = Backbone(rand(Float32, 3, 9))\n10-element Backbone{Float32, Matrix{Float32}}:\n [0.48967552, 0.91008425, 0.5339774]\n [0.2951318, 0.38963223, 0.8952989]\n [0.83763623, 0.5279301, 0.3407849]\n [0.88848716, 0.643387, 0.76827604]\n [0.697279, 0.63588345, 0.0889622]\n [0.08590478, 0.6086006, 0.6478121]\n [0.06308746, 0.6704904, 0.55852276]\n [0.46147835, 0.56259614, 0.7884294]\n [0.9694153, 0.052023113, 0.08127427]\n\njulia> ChainedBonds(backbone)\nChainedBonds{Float32, Vector{Float32}} with 8 bond lengths, 7 bond angles, and 6 torsion angles\n\njulia> is_knotted(backbone)\nfalse","category":"page"},{"location":"","page":"Overview","title":"Overview","text":"[1]: In some contexts, the term backbone may be used more loosely, and allow for atoms that are not part of the main continuous chain of atoms. This package does not support storing e.g. oxygen and beta-carbon atoms in the matrix of coordinates, as they are not part of the continuous chain of atoms.","category":"page"},{"location":"API/#Backboner-API","page":"API Reference","title":"Backboner API","text":"","category":"section"},{"location":"API/","page":"API Reference","title":"API Reference","text":"Modules = [Backboner]","category":"page"},{"location":"API/#Backboner.Backbone","page":"API Reference","title":"Backboner.Backbone","text":"Backbone{T<:Real,M<:AbstractMatrix{T}} <: AbstractVector{AbstractVector{T}}\n\nThe Backbone type is designed to efficiently store and manipulate the three-dimensional coordinates of backbone atoms.\n\n\n\n\n\n","category":"type"},{"location":"API/#Backboner.ChainedBonds","page":"API Reference","title":"Backboner.ChainedBonds","text":"ChainedBonds{T <: Real, V <: AbstractVector{T}}\n\nA lazy way to store a backbone as a series of bond lengths, bond angles, and torsion_angles.\n\nExamples\n\njulia> backbone = Protein.readpdb(\"test/data/1ZAK.pdb\")[\"A\"].backbone\n660-element Backbone{Float64, Matrix{Float64}}:\n [22.346, 17.547, 23.294]\n [22.901, 18.031, 21.993]\n [23.227, 16.793, 21.163]\n [24.115, 16.923, 20.175]\n [24.478, 15.779, 19.336]\n â‹®\n [21.480, 14.668, 4.974]\n [22.041, 14.866, 3.569]\n [21.808, 13.861, 2.734]\n [22.263, 13.862, 1.355]\n [21.085, 14.233, 0.446]\n\njulia> bonds = ChainedBonds(backbone)\nChainedBonds{Float64, Vector{Float64}} with 659 bond lengths, 658 bond angles, and 657 torsion angles\n\n\n\n\n\n","category":"type"},{"location":"API/#Backboner.append_bonds-Tuple{Backbone, AbstractVector{<:Real}, AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"API Reference","title":"Backboner.append_bonds","text":"append_bonds(backbone, bond_lengths, bond_angles, torsion_angles)\n\n\n\n\n\n","category":"method"},{"location":"API/#Backboner.is_knotted","page":"API Reference","title":"Backboner.is_knotted","text":"is_knotted(backbone::Backbone)\n\nCheck if a backbone is knotted.\n\n\n\n\n\n","category":"function"},{"location":"API/#Backboner.prepend_bonds-Tuple{Backbone, AbstractVector{<:Real}, AbstractVector{<:Real}, AbstractVector{<:Real}}","page":"API Reference","title":"Backboner.prepend_bonds","text":"prepend_bonds(backbone, bond_lengths, bond_angles, torsion_angles)\n\n\n\n\n\n","category":"method"}]
}
